// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.CommunicationDbContext;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250805135719_SeedGlobalStatuses")]
    partial class SeedGlobalStatuses
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Entities.Communication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommunicationTypeTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationTypeTypeCode");

                    b.ToTable("Communications");
                });

            modelBuilder.Entity("WebApi.Entities.CommunicationStatusHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CommunicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OccurredUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationId");

                    b.ToTable("CommunicationStatusHistories");
                });

            modelBuilder.Entity("WebApi.Entities.CommunicationType", b =>
                {
                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeCode");

                    b.ToTable("CommunicationTypes");

                    b.HasData(
                        new
                        {
                            TypeCode = "EOB",
                            DisplayName = "Explanation of Benefits"
                        },
                        new
                        {
                            TypeCode = "IDCARD",
                            DisplayName = "ID Card"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.CommunicationTypeStatus", b =>
                {
                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StatusCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeCode", "StatusCode");

                    b.ToTable("CommunicationTypeStatuses");
                });

            modelBuilder.Entity("WebApi.Entities.GlobalStatuses", b =>
                {
                    b.Property<string>("StatusCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusCode");

                    b.ToTable("GlobalStatuses");

                    b.HasData(
                        new
                        {
                            StatusCode = "ReadyForRelease",
                            Description = "Ready For Release"
                        },
                        new
                        {
                            StatusCode = "Released",
                            Description = "Released"
                        },
                        new
                        {
                            StatusCode = "QueuedForPrinting",
                            Description = "Queued For Printing"
                        },
                        new
                        {
                            StatusCode = "Printed",
                            Description = "Printed"
                        },
                        new
                        {
                            StatusCode = "Inserted",
                            Description = "Inserted"
                        },
                        new
                        {
                            StatusCode = "WarehouseReady",
                            Description = "Warehouse Ready"
                        },
                        new
                        {
                            StatusCode = "Shipped",
                            Description = "Shipped"
                        },
                        new
                        {
                            StatusCode = "InTransit",
                            Description = "In Transit"
                        },
                        new
                        {
                            StatusCode = "Delivered",
                            Description = "Delivered"
                        },
                        new
                        {
                            StatusCode = "Returned",
                            Description = "Returned"
                        },
                        new
                        {
                            StatusCode = "Failed",
                            Description = "Failed"
                        },
                        new
                        {
                            StatusCode = "Cancelled",
                            Description = "Cancelled"
                        },
                        new
                        {
                            StatusCode = "Expired",
                            Description = "Expired"
                        },
                        new
                        {
                            StatusCode = "Archived",
                            Description = "Archived"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Communication", b =>
                {
                    b.HasOne("WebApi.Entities.CommunicationType", "CommunicationType")
                        .WithMany("Communications")
                        .HasForeignKey("CommunicationTypeTypeCode");

                    b.Navigation("CommunicationType");
                });

            modelBuilder.Entity("WebApi.Entities.CommunicationStatusHistory", b =>
                {
                    b.HasOne("WebApi.Entities.Communication", "Communication")
                        .WithMany("StatusHistory")
                        .HasForeignKey("CommunicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Communication");
                });

            modelBuilder.Entity("WebApi.Entities.CommunicationTypeStatus", b =>
                {
                    b.HasOne("WebApi.Entities.CommunicationType", "CommunicationType")
                        .WithMany("Statuses")
                        .HasForeignKey("TypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommunicationType");
                });

            modelBuilder.Entity("WebApi.Entities.Communication", b =>
                {
                    b.Navigation("StatusHistory");
                });

            modelBuilder.Entity("WebApi.Entities.CommunicationType", b =>
                {
                    b.Navigation("Communications");

                    b.Navigation("Statuses");
                });
#pragma warning restore 612, 618
        }
    }
}
